The oflag argument may indicate that the file is to be created if it does not exist (by specifying
     the O_CREAT flag).  In this case, open() and openat() require an additional argument mode_t mode; the
     file is created with mode mode as described in chmod(2) and modified by the process' umask value (see
     umask(2)).

     The openat() function is equivalent to the open() function except in the case where the path
     specifies a relative path.  In this case the file to be opened is determined relative to the
     directory associated with the file descriptor fd instead of the current working directory.  The oflag
     argument and the optional fourth argument correspond exactly to the arguments for open().  If
     openat() is passed the special value AT_FDCWD in the fd argument, the current working directory is
     used and the behavior is identical to a call to open().

     The flags specified for the oflag argument must include exactly one of the following file access
     modes:

           O_RDONLY        open for reading only
           O_WRONLY        open for writing only
           O_RDWR          open for reading and writing

     In addition any combination of the following values can be or'ed in oflag:

           O_NONBLOCK      do not block on open or for data to become available
           O_APPEND        append on each write
           O_CREAT         create file if it does not exist
           O_TRUNC         truncate size to 0
           O_EXCL          error if O_CREAT and the file exists
           O_SHLOCK        atomically obtain a shared lock
           O_EXLOCK        atomically obtain an exclusive lock
           O_DIRECTORY     restrict open to a directory
           O_NOFOLLOW      do not follow symlinks
           O_SYMLINK       allow open of symlinks
           O_EVTONLY       descriptor requested for event notifications only
           O_CLOEXEC       mark as close-on-exec
           O_NOFOLLOW_ANY  do not follow symlinks in the entire path.

     Opening a file with O_APPEND set causes each write on the file to be appended to the end.  If O_TRUNC
     is specified and the file exists, the file is truncated to zero length.  If O_EXCL is set with
     O_CREAT and the file already exists, open() returns an error.  This may be used to implement a simple
     exclusive-access locking mechanism.  If O_EXCL is set with O_CREAT and the last component of the
     pathname is a symbolic link, open() will fail even if the